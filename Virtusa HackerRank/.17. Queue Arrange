import java.io.*; 
import java.util.*; 
  
class Main
{   static Queue<Integer> q =  new LinkedList<Integer>(); 

    static boolean checkSorted(int n) 
    { 
        Stack<Integer> stack =  new Stack<Integer>(); 
        int a = 1,one; 
        while (q.size() != 0)  
        { 
            one = q.peek(); 
            q.poll(); 
            if (one == a) 
                a=a+1; 
      
            else
            { 
                if (stack.size() == 0)  
                { 
                    stack.push(one); 
                } 
                else if (stack.size() != 0 && stack.peek() < one)  
                { 
                    return false; 
                } 
                else
                    stack.push(one); 
            } 
            while (stack.size() != 0 &&  
                   stack.peek() == a)  
            { 
                stack.pop(); 
                a=a+1; 
            } 
        } 
        if (a-1 == n &&  
                stack.size() == 0) 
            return true; 
      
        return false; 
    } 
    
    public static void main(String args[]) 
    { 
        
        q.add(5); 
        q.add(1); 
        q.add(2); 
        q.add(3); 
        q.add(4); 
      
        int n = q.size(); 
  
        if (checkSorted(n)) 
            System.out.print("true"); 
        else
            System.out.print("false"); 
    } 
} 

/*

INPUT:
5
5 1 2 3 4

OUTPUT:
true

*/
